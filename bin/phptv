#!/usr/bin/env php
<?php 

require "vendor/autoload.php";

// import Climate
use League\CLImate\{
    CLImate
};

/**
 * Prepare the CLI 
 * 
 * ---------------------------------------------------------------------
 */

// create a climate instance
$cli = new CLImate;

// configure the available arguments
$cli->arguments->add([

    'endpoint' => [
        'description' => 'Your TVs IPv4 address.',
        'required'    => true,
    ],

    'psk' => [
        'description' => 'Your TVs Pre-Shared Key (PSK). You can set the key under: Settings -> Network -> Home network setup -> ip control. There you have to enable the "Pre-Shared" Authentication.',
        'required'    => true,
    ],
]);

// check if everything that we need is there..
try {
    $cli->arguments->parse();
} catch(Exception $e) {
    $cli->usage(); die;
}

// show start screen
$cli->out('                                        
<green>88888888ba  88        88 88888888ba </green><blue>888888888888         </blue>
<green>88      "8b 88        88 88      "8b</green><blue>     88              </blue>
<green>88      ,8P 88        88 88      ,8P</green><blue>     88              </blue>
<green>88aaaaaa8P\' 88aaaaaaaa88 88aaaaaa8P\'</green><blue>     88 8b       d8  </blue>
<green>88""""""\'   88""""""""88 88""""""\'</green><blue>       88 `8b     d8\'  </blue>
<green>88          88        88 88         </green><blue>     88  `8b   d8\'   </blue>
<green>88          88        88 88         </green><blue>     88   `8b,d8\'    </blue>
<green>88          88        88 88         </green><blue>     88     "8"</blue>
');

/**
 * Build the container
 * 
 * ---------------------------------------------------------------------
 */

// build the container
$container = new \ClanCats\Container\Container;

// set the parameters
$container->setParameter('endpoint', $cli->arguments->get('endpoint'));
$container->setParameter('psk', $cli->arguments->get('psk'));

// bind the api client
$container->bind('client', \PHPTv\Client::class)
    ->arguments([':endpoint', ':psk']);

// bind the repositories
foreach([
    'guide' => \PHPTv\Guide::class,
    'system' => \PHPTv\System::class,
    'audio' => \PHPTv\Audio::class,
    'IRCC' => \PHPTv\IRCC::class,
] as $name => $className) {
    $container->bind('repo.'.$name, $className)->arguments(['@client']);
}

// bind the commands
foreach([
    // main
    'phptv' => \PHPTv\PHPTv::class,
    'execute' => \PHPTv\Commands\ExecuteCommand::class,

    // Help
    'help.remote' => \PHPTv\Commands\Help\RemoteHelp::class,
    'help.command' => \PHPTv\Commands\Help\CommandHelp::class,

    // Raw forwarding
    'raw_forward' => \PHPTv\Commands\RawForward::class,

    // power managment
    'toggle_power' => \PHPTv\Commands\TogglePower::class,

    // Volume
    'volume' => \PHPTv\Commands\VolumeControl::class,
] as $name => $className) {
    $container->bind('cmd.' . $name, $className)->arguments(['@container', $cli]);
}

/**
 * Srart PHP Tv 
 * 
 * ---------------------------------------------------------------------
 */
$tv = $container->get('cmd.phptv');

// connect
$tv->connect();